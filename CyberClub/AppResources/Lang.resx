<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountFailMissingParamsOrNameAlreadyUsed" xml:space="preserve">
    <value>Process failed. Possibly, some required parameters are not set or the chosen name is already used.</value>
  </data>
  <data name="Accounts" xml:space="preserve">
    <value>Accounts</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddedSuccessfully" xml:space="preserve">
    <value>Added successfully.</value>
  </data>
  <data name="AddError" xml:space="preserve">
    <value>Addition failed.</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="DBError" xml:space="preserve">
    <value>Database error.</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteAccountPrompt" xml:space="preserve">
    <value>Delete account?</value>
  </data>
  <data name="DeleteDeveloperPrompt" xml:space="preserve">
    <value>Delete developer?</value>
  </data>
  <data name="DeleteGamePrompt" xml:space="preserve">
    <value>Delete game?</value>
  </data>
  <data name="DeleteGenrePrompt" xml:space="preserve">
    <value>Delete genre?</value>
  </data>
  <data name="DeleteImagePrompt" xml:space="preserve">
    <value>Delete image?</value>
  </data>
  <data name="DevelopedBy" xml:space="preserve">
    <value>Developed by</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>An error occured.</value>
  </data>
  <data name="ExeNotFound" xml:space="preserve">
    <value>The program's executable file could not be found. The lazy ass admin should have set the proper file path.</value>
  </data>
  <data name="FillInNecessaryTextBox" xml:space="preserve">
    <value>Fill in all the reqiured textfields.</value>
  </data>
  <data name="Game" xml:space="preserve">
    <value>Game</value>
  </data>
  <data name="GameAddedToDB" xml:space="preserve">
    <value>Game added successfully.</value>
  </data>
  <data name="Games" xml:space="preserve">
    <value>Games</value>
  </data>
  <data name="Genre" xml:space="preserve">
    <value>Genre</value>
  </data>
  <data name="LoginPasswordNotFound" xml:space="preserve">
    <value>The login-password combination could not be found. Contact the admin to register an account.</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="Messages" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="Multiplayer" xml:space="preserve">
    <value>Multiplayer</value>
  </data>
  <data name="MyGames" xml:space="preserve">
    <value>My games</value>
  </data>
  <data name="NameAlreadyUsed" xml:space="preserve">
    <value>The name is already used.</value>
  </data>
  <data name="NameNotEntered" xml:space="preserve">
    <value>The name is not entered.</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="PathToEXE" xml:space="preserve">
    <value>Path to .exe</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="RenameDeveloperPrompt" xml:space="preserve">
    <value>Rename developer?</value>
  </data>
  <data name="RenameGenrePrompt" xml:space="preserve">
    <value>Rename genre?</value>
  </data>
  <data name="SearchGames" xml:space="preserve">
    <value>Search games</value>
  </data>
  <data name="SelectAGenreNTypeTheName" xml:space="preserve">
    <value>Select the genre to rename and input the new name.</value>
  </data>
  <data name="SelectAGenreToDelete" xml:space="preserve">
    <value>Select the genre to delete.</value>
  </data>
  <data name="SentSuccessfully" xml:space="preserve">
    <value>Sent successfully.</value>
  </data>
  <data name="SinglePlayer" xml:space="preserve">
    <value>Single player</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Subscribe" xml:space="preserve">
    <value>Subscribe</value>
  </data>
  <data name="SubsRatesAndAvg" xml:space="preserve">
    <value>Subs: {subs}   Rates: {rates}   Avg: {avg}</value>
  </data>
  <data name="Table" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="Unsubscribe" xml:space="preserve">
    <value>Unsubscribe</value>
  </data>
  <data name="UnsubscribePrompt" xml:space="preserve">
    <value>Cancel subscription?</value>
  </data>
  <data name="UpdateAccountPrompt" xml:space="preserve">
    <value>Update account?</value>
  </data>
  <data name="UpdatedSuccessfully" xml:space="preserve">
    <value>Updated successfully.</value>
  </data>
  <data name="UpdateGamePrompt" xml:space="preserve">
    <value>Update game info?</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="YouAreBanned" xml:space="preserve">
    <value>Seems like your account has been suspended. The admin has more info.</value>
  </data>
</root>